# -*- coding: utf-8 -*-

"""
capstone

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class CriarGarcomRequest(object):

    """Implementation of the 'Criar garcomRequest' model.

    TODO: type model description here.

    Attributes:
        name (string): TODO: type description here.
        cpf (string): TODO: type description here.
        id_user (int): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "name": 'name',
        "cpf": 'cpf',
        "id_user": 'id_user'
    }

    def __init__(self,
                 name=None,
                 cpf=None,
                 id_user=None):
        """Constructor for the CriarGarcomRequest class"""

        # Initialize members of the class
        self.name = name
        self.cpf = cpf
        self.id_user = id_user

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        name = dictionary.get('name')
        cpf = dictionary.get('cpf')
        id_user = dictionary.get('id_user')

        # Return an object of this model
        return cls(name,
                   cpf,
                   id_user)
